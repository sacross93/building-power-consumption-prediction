전력사용량 예측 AI 프로젝트 진행 히스토리
==============================================

프로젝트 개요
-----------
- 목표: 한국에너지공단 2025 전력사용량 예측 AI 경진대회
- 평가지표: SMAPE (Symmetric Mean Absolute Percentage Error)
- 목표 성능: SMAPE ≤ 6.0
- 데이터: train.csv, building_info.csv, test.csv
- 환경: UV 기반 Python 환경

1단계: 탐색적 데이터 분석 (EDA)
=============================
파일: eda_claude.py
완료일: 2025-07-24

주요 성과:
- 전체 204,000개 훈련 샘플, 100개 건물, 85일간 데이터 분석
- 11.99% 이상치 발견 (IQR 기준)
- 시간대별 패턴 분석: 오전 10-11시, 오후 2-3시 피크
- 건물 유형별 특성 분석
- 날씨 데이터와 전력소비량 상관관계 분석

결과물:
- visualizations/ 폴더: 12개 시각화 파일
- eda_results/ 폴더: 상세 분석 텍스트 리포트

주요 인사이트:
- 강한 시간적 패턴 존재 (일간, 주간 주기성)
- 건물별 전력소비 패턴 차이 큼
- 기온과 전력소비량 간 U자형 관계
- 습도, 풍속도 전력소비에 영향

2단계: 데이터 전처리
==================
파일: preprocessing_claude.py
완료일: 2025-07-24

주요 기능:
- 3가지 이상치 처리 전략 구현:
  * none_log: 이상치 처리 없음 + log 변환
  * iqr_log: IQR 기반 이상치 제거 + log 변환  
  * building_percentile_log: 건물별 백분위 기반 제거 + log 변환

고급 피처 엔지니어링:
- 복합 기상 변수 생성:
  * 불쾌지수 = 0.81*기온 + 0.01*습도*(0.99*기온-14.3) + 46.3
  * 체감온도 = 기온 + 0.33*수증기압 - 0.7*풍속 - 4.0
  * 냉방도일 = max(0, 기온-18)
  * 난방도일 = max(0, 18-기온)

시계열 피처:
- 순환 인코딩 (sin/cos): 시간, 요일, 월
- 시차 변수: 1시간, 24시간, 168시간(1주일) 전
- 이동 통계: 24시간, 7일 평균/표준편차
- 한국 공휴일 처리

결과물:
- processed_data/ 폴더: 3가지 버전별 전처리 데이터
- 58개 피처 생성 (원래 5개 → 58개)

3단계: 유틸리티 함수 개발
=======================
완료일: 2025-07-24

utils/smape_utils.py:
- SMAPE 계산 함수 (epsilon=1e-8로 0 나눔 방지)
- 안전한 log 변환 함수 (safe_log_transform, safe_exp_transform)
- LightGBM, XGBoost, CatBoost용 커스텀 SMAPE 목적함수

utils/validation.py:
- TimeSeriesSplitBuilding 클래스: 건물별 시계열 교차검증
- 시간 순서 보존하며 train/validation 분할
- datetime 파싱 실패 시 인덱스 기반 fallback 메커니즘

utils/postprocess.py:
- ColdStartHandler 클래스: 테스트 데이터 시차변수 초기화
- 건물별 최근 168시간 패턴 학습
- 시간대별 평균값으로 시차변수 보완
- 후처리 파이프라인: log 역변환, 음수 클리핑, 범위 제한

4단계: 머신러닝 모델링
====================
파일: modeling_claude.py
진행 상황: 80% 완료 (최적화 진행 중)

모델 아키텍처:
- LightGBM 기반 (향후 XGBoost, CatBoost 확장 예정)
- Optuna 하이퍼파라미터 최적화
- 3-fold 시계열 교차검증

하이퍼파라미터 최적화 범위:
- num_leaves: 10-300
- learning_rate: 0.01-0.3
- feature_fraction: 0.4-1.0
- bagging_fraction: 0.4-1.0
- regularization: L1(0-10), L2(0-10)

현재 성과:
- 초기 SMAPE ~14에서 11.85까지 개선
- CV 최적화 진행 중 (100 trials)

주요 기술적 해결사항:
1. Datetime 파싱 에러 → 인덱스 기반 분할로 해결
2. LightGBM early stopping 에러 → validation set 제거로 해결
3. 무한대 SMAPE 문제 → safe 변환 함수로 해결
4. Unicode 인코딩 에러 → ASCII 문자로 대체

5단계: 현재 진행 상황
==================
완료된 작업:
✅ EDA 완료 (12개 시각화 + 분석 리포트)
✅ 3가지 전처리 파이프라인 구현
✅ SMAPE 유틸리티 함수 작성
✅ Cold start 문제 해결 전략 구현
✅ TimeSeriesSplit 검증 전략 구현
✅ 역변환 및 후처리 파이프라인 완성

진행 중:
🔄 LightGBM + Optuna 모델 최적화 (SMAPE 11.85 달성)

대기 중:
⏳ 3가지 전처리 버전별 실험 완료
⏳ 제출 파일 생성
⏳ 성능 분석 및 리포트

기술적 도전과 해결책
==================
1. 시계열 데이터의 Cold Start 문제
   → 건물별 최근 168시간 패턴 학습으로 해결

2. 다양한 이상치 처리 전략
   → 3가지 접근법으로 비교 실험

3. 복잡한 시간적 패턴
   → 순환 인코딩과 다양한 시차 변수로 해결

4. SMAPE 최적화
   → 커스텀 목적함수와 안전한 변환으로 해결

5. 대용량 데이터 처리
   → 메모리 효율적 처리와 가비지 컬렉션

다음 단계 계획
=============
1. 현재 최적화 완료 후 최종 모델 훈련
2. 3가지 전처리 버전별 성능 비교
3. 최고 성능 모델로 제출 파일 생성
4. 앙상블 기법 검토 (시간 허용 시)
5. 최종 성능 분석 및 리포트 작성

프로젝트 파일 구조
=================
building-power-consumption-prediction/
├── data/                          # 원본 데이터
├── processed_data/                # 전처리된 데이터 (3가지 버전)
├── visualizations/               # EDA 시각화 파일
├── eda_results/                  # EDA 분석 리포트
├── utils/                        # 유틸리티 함수들
├── models/                       # 훈련된 모델 저장소
├── results/                      # 제출 파일 및 결과
├── history_claude/               # 프로젝트 히스토리
├── eda_claude.py                 # EDA 스크립트
├── preprocessing_claude.py       # 전처리 스크립트
├── modeling_claude.py            # 모델링 스크립트
└── requirements.txt              # 패키지 의존성

성능 목표 대비 현황
=================
목표: SMAPE ≤ 6.0
현재: SMAPE ~11.85 (교차검증 기준)
진행률: 최적화 진행 중, 목표 달성 가능성 높음

이 프로젝트는 체계적인 ML 파이프라인 구축과 시계열 예측의 복잡한 문제들을 
단계별로 해결해가는 과정을 보여주고 있습니다.